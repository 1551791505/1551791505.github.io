<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>岩窟的blog</title>
  
  <subtitle>琥珀</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-09T03:37:54.657Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>yanku</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>逆向</title>
    <link href="http://yoursite.com/2020/05/09/nixiang/"/>
    <id>http://yoursite.com/2020/05/09/nixiang/</id>
    <published>2020-05-09T03:33:41.000Z</published>
    <updated>2020-05-09T03:37:54.657Z</updated>
    
    <content type="html"><![CDATA[<p>\6. 根据crackme，overflow，overflow2，overflow3的二进制程序，复现授课中的利用过程</p><p><strong>1)</strong> <strong>Crackme**</strong>：**</p><p>关键为 jz short <em>*</em></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/05/09/YQCUgO.png" alt="YQCUgO.png" title="">                </div>                <div class="image-caption">YQCUgO.png</div>            </figure> <p>修改指令</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQCrVA.png" alt="YQCrVA.png"></p><p>保存修改</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQCy5t.png" alt="YQCy5t.png"></p><p>正确密码无法得到正常结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/05/09/YQC228.png" alt="YQC228.png" title="">                </div>                <div class="image-caption">YQC228.png</div>            </figure> <p><strong>2)</strong> <strong>OF1**</strong>：**</p><p>开始调试</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/05/09/YQCRxS.png" alt="YQCRxS.png" title="">                </div>                <div class="image-caption">YQCRxS.png</div>            </figure> <p>7个q没有改变局部变量的值</p><p>8个q执行前</p><p>执行后发生了栈溢出</p><p><strong>3)</strong> <strong>OF2**</strong>：**</p><p>记录函数正确输出地址</p><p>任意填充8字符覆盖password，4字符覆盖authenticated，4字符覆盖上一栈帧的ebp,填入4个字符返回地址，判断地址是大端序还是小端序读入。</p><p>攻击成功</p><p><strong>4)</strong> <strong>OF3**</strong>：**</p><p>在xp下运行ollydbug，记录ebp,返回地址等</p><p>获取mssageboxa地址</p><p>获取jmp esp和exit地址 </p><p>Password代码：</p><p>结果成功</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;\6. 根据crackme，overflow，overflow2，overflow3的二进制程序，复现授课中的利用过程&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; &lt;strong&gt;Crackme**&lt;/strong&gt;：**&lt;/p&gt;
&lt;p&gt;关键为 jz short 
      
    
    </summary>
    
    
      <category term="逆向" scheme="http://yoursite.com/categories/%E9%80%86%E5%90%91/"/>
    
    
      <category term="逆向" scheme="http://yoursite.com/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>dvwa</title>
    <link href="http://yoursite.com/2020/05/09/dvwa/"/>
    <id>http://yoursite.com/2020/05/09/dvwa/</id>
    <published>2020-05-09T03:33:29.000Z</published>
    <updated>2020-05-09T03:52:47.145Z</updated>
    
    <content type="html"><![CDATA[<p><strong>1)</strong> <strong>Brute Force</strong></p><p>Low：首先将火狐浏览器设置代理</p><p> <img src="https://s1.ax1x.com/2020/05/09/YMzO7q.png" alt="YMzO7q.png"></p><p>然后输入用户名admin密码a</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQSp3F.png" alt="YQSp3F.png"></p><p>再用brutesuite截获报文</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQSCjJ.png" alt="YQSCjJ.png"></p><p>用CTRL+I将报文发送给Intruder,然后点clear消除变量，在选择密码进行add</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQSkH1.png" alt="YQSkH1.png"></p><p>在payload里添加字典</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQSVN6.png" alt="YQSVN6.png"></p><p>开始攻击</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQSKjH.png" alt="YQSKjH.png"></p><p>攻击成功找到密码</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQSGUP.png" alt="YQSGUP.png"></p><p>Mid：</p><p>对比low和mid的源码发现mid中多了mysql_real_escape_string() 函数，而该函数是转义字符不影响暴力破解</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQSUgg.png" alt="YQSUgg.png"></p><p>采取步骤与low一样，最后结果大同小异</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/05/09/YQS0Ds.png" alt="YQS0Ds.png" title="">                </div>                <div class="image-caption">YQS0Ds.png</div>            </figure> <p>High：</p><p>查看源码发现在mid的基础上增添了一个新的函数stripslashes和sleep（3）延时3秒，stripslashes()函数用于清理字符串中的反斜杠（\），依旧不影响暴力破解。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/05/09/YQS4bR.png" alt="YQS4bR.png" title="">                </div>                <div class="image-caption">YQS4bR.png</div>            </figure> <p>破解成功</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQSLxe.png" alt="YQSLxe.png"></p><p><strong>2)</strong> <strong>SQL Injection</strong></p><p>注入前应该知道的基本信息：<br> | SCHEMATA ――&gt;存储数据库名的，</p><p>|——&gt;关键字段：SCHEMA_NAME，表示数据库名称</p><p>TABLES ――&gt;存储表名的</p><p>TABLE_SCHEMA表示表所属的数据库名称；</p><p>TABLE_NAME表示表的名称</p><p>COLUMNS ――&gt;存储字段名的</p><p>TABLE_NAME表示所属的表的名称</p><p>COLUMN_NAME表示字段名</p><p>Low：</p><p>查看源码，发现没有加过滤函数 </p><p><img src="https://s1.ax1x.com/2020/05/09/YQpSat.png" alt="YQpSat.png"></p><p>发现存在字符型注入</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQppIP.png" alt="YQppIP.png"></p><p>判断有几个字段</p><p>1’ or 1=1 order by 2 #</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQpPG8.png" alt="YQpPG8.png"></p><p>获取数据库名称</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQpAMQ.png" alt="YQpAMQ.png"></p><p>查询表名</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQpVqs.png" alt="YQpVqs.png"></p><p>查询字段名</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQpmaq.png" alt="YQpmaq.png"></p><p>获取数据</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQpMGT.png" alt="YQpMGT.png"></p><p>Mid：</p><p>查看源码</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQplzF.png" alt="YQplzF.png"></p><p>发现仅仅是加了一个mysql_real_escape_string() 函数，这仅仅对</p><p>\x00   \n    \r   \    ‘    “    \x1a</p><p>等字符有影响，我们可以用char码绕过，例如Char(“61”) 为=，或者转化为16，8进制，</p><p>其余步骤与low大同小异</p><p>只需将过滤的字符编码即可通过。</p><p>存在数字型注入</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQptd1.png" alt="YQptd1.png"></p><p>判断数据库名</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQpai6.png" alt="YQpai6.png"></p><p>判断表名</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQpdJK.png" alt="YQpdJK.png"></p><p>直接输入表名不行，可以转化为16进制绕过</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQpDQe.png" alt="YQpDQe.png"></p><p>获取数据</p><pre><code>1 or 1=1 union select group_concat(user_id,first_name,last_name),group_concat(password) from users #</code></pre><p> <img src="https://s1.ax1x.com/2020/05/09/YQpsLd.png" alt="YQpsLd.png"></p><p>High：</p><p>查看源码</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQpoLj.png" alt="YQpoLj.png"></p><p>仅仅是多了一个limit，但可以注释掉所以和上述过长一样，就不再赘述</p><pre><code>1&#39; or 1=1 union select group_concat(user_id,first_name,last_name),group_concat(password) from users #</code></pre><p>查询成功：</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQpHwn.png" alt="YQpHwn.png"></p><p><strong>3)</strong> <strong>SQL Injection(Blind)</strong></p><p>通过sqlmap来进行盲注</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQpLF0.png" alt="YQpLF0.png"></p><p>首先f12查看cookies</p><p>然后kali使用sqlmap注入</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQpXWT.png" alt="YQpXWT.png"></p><p>查看所有数据库</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/05/09/YQpxlF.png" alt="YQpxlF.png" title="">                </div>                <div class="image-caption">YQpxlF.png</div>            </figure> <p>用current-db查看当前数据库 </p><p><img src="https://s1.ax1x.com/2020/05/09/YQ99m9.png" alt="YQ99m9.png"></p><p>查看有几个数据项</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/05/09/YQ9CwR.png" alt="YQ9CwR.png" title="">                </div>                <div class="image-caption">YQ9CwR.png</div>            </figure> <p>获取数据</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/05/09/YQ9tXQ.png" alt="YQ9tXQ.png" title="">                </div>                <div class="image-caption">YQ9tXQ.png</div>            </figure> <p>Mid</p><p>用burpsuite抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/05/09/YQ9a0s.png" alt="YQ9a0s.png" title="">                </div>                <div class="image-caption">YQ9a0s.png</div>            </figure> <p>使用1’ and 1=2 #或着1进行测试发现是数字型注入</p><p> [<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://imgchr.com/i/YQ90kq" alt="YQ90kq.png](https://s1.ax1x.com/2020/05/09/YQ90kq.png)" title="">                </div>                <div class="image-caption">YQ90kq.png](https://s1.ax1x.com/2020/05/09/YQ90kq.png)</div>            </figure></p><p>注入发现是4位数据库</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQ9spT.png" alt="YQ9spT.png"></p><p>通过回复时间可以发现第一个字符为d</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQ9cX4.png" alt="YQ9cX4.png"></p><p>不断注入直至猜解表中的字段名时，猜解字段名的长度，对字段值<code>users</code>进行16进制转换为<code>0x7573657273</code>与sql injection操作类似</p><p>High：</p><p>有两点干扰：</p><p>对于LIMIT 1的限制输出记录数目，可以利用#注释其限制；</p><p>服务端可能会随机执行sleep()函数，做执行，则延迟的时间是随机在2-4s，所以可以判断dvwa给与回复的类型来判断是否得到结果或者等待10秒与mid类似。</p><p>剩余操作为盲注和普通注入的重复操作，在这里不再赘述</p><p><strong>4)</strong> <strong>XSS reflected</strong></p><p>Low:</p><p>查看源代码</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQ9RB9.png" alt="YQ9RB9.png"></p><p>没有安全措施直接攻击</p><pre><code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code></pre><p> <img src="https://s1.ax1x.com/2020/05/09/YQ9W7R.png" alt="YQ9W7R.png"></p><p>Mid：</p><p>查看源代码</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQ9o9K.png" alt="YQ9o9K.png"></p><p>该代码中删除输入的</p><pre><code>&lt;script&gt;</code></pre><p>，只需输入两个</p><pre><code>&lt;script&gt;</code></pre><p>，或者大写其中字符</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQ9Hje.png" alt="YQ9Hje.png"></p><p>High：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/05/09/YQ9qnH.png" alt="YQ9qnH.png" title="">                </div>                <div class="image-caption">YQ9qnH.png</div>            </figure> <p>通过正则表达式过滤</p><pre><code>&lt;script&gt;</code></pre><p>，可以通过img、body等或者iframe等标签的src注入恶意的js代码</p><pre><code>&lt;IMG src=1 onerror=alert(“AAA”)&gt;</code></pre><p> <img src="https://s1.ax1x.com/2020/05/09/YQ9jAI.png" alt="YQ9jAI.png"></p><p><strong>5)</strong> <strong>XSS stored</strong></p><p>Low:</p><p>查看源代码</p><p> [<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://imgchr.com/i/YQ9x4P" alt="YQ9x4P.png](https://s1.ax1x.com/2020/05/09/YQ9x4P.png)" title="">                </div>                <div class="image-caption">YQ9x4P.png](https://s1.ax1x.com/2020/05/09/YQ9x4P.png)</div>            </figure></p><p>源代码对message，name输入框内容 没有进行XSS方面的过滤和检查，可以用burpsuite抓包</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQCkHs.png" alt="YQCkHs.png"></p><p>修改mtxmessage或者name值为</p><pre><code>&lt;script&gt;alert(document.cookie)&lt;/script&gt;</code></pre><p> <img src="https://s1.ax1x.com/2020/05/09/YQCVNq.png" alt="YQCVNq.png"></p><p>Mid:</p><p>使用</p><pre><code>&lt;scr&lt;script&gt;ipt&gt;alert(document.cookie)&lt;/script&gt;或者&lt;sCript&gt;alert(document.cookie)&lt;/script&gt;</code></pre><p>即可绕过过滤，过程与low相同</p><p> <img src="https://s1.ax1x.com/2020/05/09/YQC8ER.png" alt="YQC8ER.png"></p><p>High：</p><p>修改为</p><pre><code>&lt;IMG src=1 onerror=alert(document.cookie)&gt;</code></pre><p>即可绕过过滤，过程与low相同</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;1)&lt;/strong&gt; &lt;strong&gt;Brute Force&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Low：首先将火狐浏览器设置代理&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;https://s1.ax1x.com/2020/05/09/YMzO7q.png&quot; alt
      
    
    </summary>
    
    
      <category term="sql xss" scheme="http://yoursite.com/categories/sql-xss/"/>
    
    
      <category term="sql，xss" scheme="http://yoursite.com/tags/sql%EF%BC%8Cxss/"/>
    
  </entry>
  
  <entry>
    <title>自建简单网页攻击</title>
    <link href="http://yoursite.com/2020/05/09/wangan/"/>
    <id>http://yoursite.com/2020/05/09/wangan/</id>
    <published>2020-05-09T03:04:39.000Z</published>
    <updated>2020-05-09T03:52:32.031Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自建网页攻击"><a href="#自建网页攻击" class="headerlink" title="自建网页攻击"></a>自建网页攻击</h1><p>\4.  复现SQLi和XSS漏洞，获取数据库的表名，数据库名以及列名，数据内容等信息及漏洞修复</p><p><strong>1)</strong> <strong>下载wampserver并在其上的www目录下新建 login.php 和 test.php</strong></p><p><strong>Login**</strong>：**</p><pre><code>&lt;html&gt;&lt;head&gt;&lt;title&gt;网络安全作业二&lt;/title&gt;&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;&lt;/head&gt; &lt;body &gt;&lt;form action=&quot;test.php&quot; method=&quot;post&quot;&gt;  &lt;fieldset &gt;    &lt;legend&gt;自建sql注入平台&lt;/legend&gt;    &lt;table&gt;      &lt;tr&gt;        &lt;td&gt;用户名：&lt;/td&gt;        &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;密  码：&lt;/td&gt;        &lt;td&gt;&lt;input type=&quot;text&quot; name=&quot;password&quot;&gt;&lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/td&gt;        &lt;td&gt;&lt;input type=&quot;reset&quot; value=&quot;重置&quot;&gt;&lt;/td&gt;      &lt;/tr&gt;    &lt;/table&gt;  &lt;/fieldset&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><strong>Test</strong>：</p><pre><code>&lt;?php $pwd=$_POST[&#39;password&#39;]; $uname=$_POST[&#39;username&#39;]; //echo &quot;您当前执行的sql语句为：&quot; ; //echo &quot;select * from admin where password=&#39;$pwd&#39; and name=&#39;$uname&#39;&lt;br/&gt;&quot;; //echo &quot;&lt;hr&gt;&quot;; $mysqli = new mysqli(&#39;127.0.0.1&#39;,&#39;root&#39;,&#39;&#39;,&#39;sqlin&#39;);  if(mysqli_connect_errno()){   printf(&quot;连接失败:%s&lt;br&gt;&quot;,mysqli_connect_error());   exit(); } $result = $mysqli-&gt;query(&quot;select * from admin where name=&#39;$uname&#39;&quot;); //print_r($result-&gt;fetch_array(MYSQLI_ASSOC)); if($row=mysqli_fetch_row($result)) {    printf (&quot;%s : %s&quot;,$row[0],$row[1]);        echo &quot;&lt;br&gt;&quot;;    echo &quot;success！&quot;; } else {    echo &quot;账号或密码错误！&quot;; } $mysqli-&gt;close(); $result-&gt;close();?&gt;</code></pre><p><strong>2)</strong> <strong>创建数据库sqlin并写入数据</strong> </p><p><img src="https://s1.ax1x.com/2020/05/09/YMvvbq.png" alt="YMvvbq.png"> </p><p><strong>3)</strong> <strong>Sql**</strong>注入**</p><p>通过输入用户名</p><pre><code>1&#39; order by 3#或1&#39; order by 2#</code></pre><p>判断sql有几列</p><p> <img src="https://s1.ax1x.com/2020/05/09/YMxMGD.png" alt="YMxMGD.png"></p><pre><code>1&#39; union select 1,database() #</code></pre><p>获取数据库名</p><p> <img src="https://s1.ax1x.com/2020/05/09/YMxoLR.png" alt="YMxoLR.png"></p><pre><code>1&#39; union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() #</code></pre><p>获取数据表名</p><p> <img src="https://s1.ax1x.com/2020/05/09/YMx0zQ.png" alt="YMx0zQ.png"></p><pre><code>0&#39; union select (select column_name from information_schema.columns where table_name=&#39;admin&#39; limit 0,1),(select column_name from information_schema.columns where table_name=&#39;admin&#39; limit 1,2)#</code></pre><p>获取列名</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/05/09/YMxXWD.png" alt="YMxXWD.png" title="">                </div>                <div class="image-caption">YMxXWD.png</div>            </figure> <pre><code>1&#39; union select * from admin#</code></pre><p> 获取数据</p><p><strong>4)</strong> <strong>修复</strong></p><p>在test.php中可以加入对于“#”或者“=”的过滤，并对长度进行限制</p><p>例如</p><pre><code>if(strlen($pwd)&gt;10)echo &quot;账号或密码错误！&quot;;</code></pre><p><strong>5)</strong> <strong>XSS**</strong>漏洞利用**</p><p>www目录下新建xss.php</p><p><strong>xss**</strong>：**</p><pre><code>&lt;html&gt;&lt;head&gt; &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt; &lt;title&gt;XSS&lt;/title&gt;&lt;/head&gt; &lt;body&gt; &lt;form action=&quot;&quot; method=&quot;get&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;input&quot;&gt;   &lt;input type=&quot;submit&quot;&gt; &lt;/form&gt; &lt;br&gt; &lt;?php $XssReflex = $_GET[&#39;input&#39;];echo &#39;output:&lt;br&gt;&#39;.$XssReflex;?&gt; &lt;/body&gt; &lt;/html&gt;</code></pre><p><strong>6)</strong> <strong>XSS**</strong>漏洞攻击**</p><p> <img src="https://s1.ax1x.com/2020/05/09/YMzCwt.png" alt="YMzCwt.png"></p><p>如果输入2则输出2，但是如果输入可执行代码</p><pre><code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code></pre><p> <img src="https://s1.ax1x.com/2020/05/09/YMzumn.png" alt="YMzumn.png"></p><p>此时查看源代码则发现我们输入的内容，弹窗弹出说明我们的代码是可执行的。</p><p><strong>7)</strong> <strong>XSS**</strong>漏洞防范**</p><p>我们可以用htmlentities() 函数把字符转换为 HTML 实体</p><p>例：将</p><pre><code>echo &#39;output:&lt;br&gt;&#39;.$XssReflex;</code></pre><p>替换成</p><pre><code>echo &#39;output:&lt;br&gt;&#39;.htmlentities($XssReflex);</code></pre><p>再去输入上一步的代码。</p><p> <img src="https://s1.ax1x.com/2020/05/09/YMzy1e.png" alt="YMzy1e.png"></p><p>发现没有弹窗，说明漏洞被修复，类似的还有htmlspecialchars函数HTMLPurifier.auto.php插件，RemoveXss函数等可以防范反射型xss漏洞的利用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;自建网页攻击&quot;&gt;&lt;a href=&quot;#自建网页攻击&quot; class=&quot;headerlink&quot; title=&quot;自建网页攻击&quot;&gt;&lt;/a&gt;自建网页攻击&lt;/h1&gt;&lt;p&gt;\4.  复现SQLi和XSS漏洞，获取数据库的表名，数据库名以及列名，数据内容等信息及漏洞修复&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
      <category term="xss sql" scheme="http://yoursite.com/categories/xss-sql/"/>
    
    
      <category term="xss，sql" scheme="http://yoursite.com/tags/xss%EF%BC%8Csql/"/>
    
  </entry>
  
  <entry>
    <title>php学习笔记</title>
    <link href="http://yoursite.com/2020/04/14/php%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/04/14/php%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-04-14T07:15:33.000Z</published>
    <updated>2020-04-20T03:08:14.694Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>sqllab</title>
    <link href="http://yoursite.com/2020/04/14/sqllib/"/>
    <id>http://yoursite.com/2020/04/14/sqllib/</id>
    <published>2020-04-14T07:09:58.000Z</published>
    <updated>2020-04-25T13:02:02.610Z</updated>
    
    <content type="html"><![CDATA[<h1 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h1><p>先输入?id=1判断是否存在注入漏洞</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/JygZrt.png" alt="JygZrt.png" title="">                </div>                <div class="image-caption">JygZrt.png</div>            </figure><p>在输入?id=1’发现构造出了’1’’的错误语句</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/JygJrq.png" alt="JygJrq.png" title="">                </div>                <div class="image-caption">JygJrq.png</div>            </figure><p>输入1’or 1=1—+发现回显正常，由于空格会被自动去掉，所以用+代替空格</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/JygYq0.png" alt="JygYq0.png" title="">                </div>                <div class="image-caption">JygYq0.png</div>            </figure><p>order by 3成功，order by 4 失败，判断有3列数据<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/Jygys1.png" alt="Jygys1.png" title="">                </div>                <div class="image-caption">Jygys1.png</div>            </figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/JygBRJ.png" alt="JygBRJ.png" title="">                </div>                <div class="image-caption">JygBRJ.png</div>            </figure><p>输入-1’union select 1,2,3—+,当查询不存在的id时，数据库会将后面的查询语句的内容回显，并且可以判断2，3为显示位 </p><p><img src="https://s1.ax1x.com/2020/04/25/JygDz9.png" alt="JygDz9.png"></p><p>输入database()获取数据库名，输入version（）获取版本号</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/Jyg2dK.png" alt="Jyg2dK.png" title="">                </div>                <div class="image-caption">Jyg2dK.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/JygRIO.png" alt="JygRIO.png" title="">                </div>                <div class="image-caption">JygRIO.png</div>            </figure><p>通过group_concat将多个数据查询结果转为字符串输出，通过查询information获取库名，并查询security库中的表名</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/JygfiD.png" alt="JygfiD.png" title="">                </div>                <div class="image-caption">JygfiD.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/JyghJe.png" alt="JyghJe.png" title="">                </div>                <div class="image-caption">JyghJe.png</div>            </figure><p>查询users表中的列</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/Jyg4RH.png" alt="Jyg4RH.png" title="">                </div>                <div class="image-caption">Jyg4RH.png</div>            </figure><p>获取用户名及密码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/JygoQA.png" alt="JygoQA.png" title="">                </div>                <div class="image-caption">JygoQA.png</div>            </figure><h1 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h1><p>输入1发现正常返回，1’错误返回，’’LIMIT 0,1’说明为数字型注入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/Jyg5zd.png" alt="Jyg5zd.png" title="">                </div>                <div class="image-caption">Jyg5zd.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/JygTsI.png" alt="JygTsI.png" title="">                </div>                <div class="image-caption">JygTsI.png</div>            </figure><p>只需将less-1中的’去掉就可以通过</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/Jyg7Lt.png" alt="Jyg7Lt.png" title="">                </div>                <div class="image-caption">Jyg7Lt.png</div>            </figure><h1 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h1><p>输入1’发现回显’1’’)多了一个)，猜测将查询为id=（’$id’）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/JygbeP.png" alt="JygbeP.png" title="">                </div>                <div class="image-caption">JygbeP.png</div>            </figure><p>将-1’后加个）即可通过</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/Jygqdf.png" alt="Jygqdf.png" title="">                </div>                <div class="image-caption">Jygqdf.png</div>            </figure><h1 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h1><p>输入1’正常返回。输入1”错误</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/JygLo8.png" alt="JygLo8.png" title="">                </div>                <div class="image-caption">JygLo8.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/JygXFS.png" alt="JygXFS.png" title="">                </div>                <div class="image-caption">JygXFS.png</div>            </figure><p>猜测将id进行了（””)包装，构住1”)即可通过</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://s1.ax1x.com/2020/04/25/JygjJg.png" alt="JygjJg.png" title="">                </div>                <div class="image-caption">JygjJg.png</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;less-1&quot;&gt;&lt;a href=&quot;#less-1&quot; class=&quot;headerlink&quot; title=&quot;less-1&quot;&gt;&lt;/a&gt;less-1&lt;/h1&gt;&lt;p&gt;先输入?id=1判断是否存在注入漏洞&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
 
      
    
    </summary>
    
    
      <category term="sql注入" scheme="http://yoursite.com/categories/sql%E6%B3%A8%E5%85%A5/"/>
    
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/04/13/hello-world/"/>
    <id>http://yoursite.com/2020/04/13/hello-world/</id>
    <published>2020-04-13T14:34:12.659Z</published>
    <updated>2020-04-13T14:34:12.659Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="lang-bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="lang-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="lang-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="lang-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
